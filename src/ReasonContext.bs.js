// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function CreateContext(Config) {
  var state = /* record */[/* contents */Config[/* defaultValue */0]];
  var subscribers = /* record */[/* contents : [] */0];
  var subscribe = function (cb) {
    subscribers[0] = /* :: */[
      cb,
      subscribers[0]
    ];
    return (function (param) {
        subscribers[0] = List.filter((function (c) {
                  return c !== cb;
                }))(subscribers[0]);
        return /* () */0;
      });
  };
  var setState = function (value) {
    state[0] = value;
    return List.iter((function (sub) {
                  return Curry._1(sub, /* () */0);
                }), subscribers[0]);
  };
  var component = ReasonReact.statelessComponent("Provider");
  var make = function (value, children) {
    return /* record */[
            /* debugName */component[/* debugName */0],
            /* reactClassInternal */component[/* reactClassInternal */1],
            /* handedOffState */component[/* handedOffState */2],
            /* willReceiveProps */component[/* willReceiveProps */3],
            /* didMount */(function (param) {
                return setState(value);
              }),
            /* didUpdate */(function (param) {
                return setState(value);
              }),
            /* willUnmount */component[/* willUnmount */6],
            /* willUpdate */component[/* willUpdate */7],
            /* shouldUpdate */component[/* shouldUpdate */8],
            /* render */(function (param) {
                return children;
              }),
            /* initialState */component[/* initialState */10],
            /* retainedProps */component[/* retainedProps */11],
            /* reducer */component[/* reducer */12],
            /* jsElementWrapped */component[/* jsElementWrapped */13]
          ];
  };
  var Provider = /* module */[
    /* component */component,
    /* make */make
  ];
  var component$1 = ReasonReact.reducerComponent("Consumer");
  var make$1 = function (children) {
    return /* record */[
            /* debugName */component$1[/* debugName */0],
            /* reactClassInternal */component$1[/* reactClassInternal */1],
            /* handedOffState */component$1[/* handedOffState */2],
            /* willReceiveProps */component$1[/* willReceiveProps */3],
            /* didMount */(function (param) {
                var send = param[/* send */3];
                var unsub = subscribe((function (param) {
                        return Curry._1(send, /* Update */0);
                      }));
                return Curry._1(param[/* onUnmount */4], (function (param) {
                              return Curry._1(unsub, /* () */0);
                            }));
              }),
            /* didUpdate */component$1[/* didUpdate */5],
            /* willUnmount */component$1[/* willUnmount */6],
            /* willUpdate */component$1[/* willUpdate */7],
            /* shouldUpdate */component$1[/* shouldUpdate */8],
            /* render */(function (param) {
                return Curry._1(children, state[0]);
              }),
            /* initialState */(function (param) {
                return true;
              }),
            /* retainedProps */component$1[/* retainedProps */11],
            /* reducer */(function (param, state) {
                return /* Update */Block.__(0, [!state]);
              }),
            /* jsElementWrapped */component$1[/* jsElementWrapped */13]
          ];
  };
  var Consumer = /* module */[
    /* component */component$1,
    /* make */make$1
  ];
  return /* module */[
          /* state */state,
          /* subscribers */subscribers,
          /* subscribe */subscribe,
          /* setState */setState,
          /* Provider */Provider,
          /* Consumer */Consumer
        ];
}

exports.CreateContext = CreateContext;
/* ReasonReact Not a pure module */
